{"version":3,"sources":["webpack://ellen-kelley.github.io/./src/assets/js/portfolio.js"],"names":["images","window","innerWidth","document","querySelectorAll","forEach","item","index","setAttribute","speed","loop","autoplay","delay","disableOnInteraction","slidesPerView","pagination","el","type","clickable","lastDataKey","addEventListener","async","databaseRef","projectFirestore","ref","limitToFirst","queryForData","getData","handleClick","localStorage","getItem","loadMoreData","loadMore","querySelector","startAfter","on","snapshot","data","val","displayData","Object","keys","length","setItem","removeEventListener","style","display","template","key","url","filter","innerHTML","Promise","all","Array","from","map","img","complete","resolve","naturalHeight","then","results","every","res","startPortfolio","removePreloader","classList","remove","preloader","portfolioContainer","portfolioIsotope","itemSelector","arrange","getAttribute","portfolioFilters","e","preventDefault","add","selector"],"mappings":"0MAcA,MAAMA,EAAS,CAAC,QAAS,QAAS,QAAS,SAEvCC,OAAOC,WAAa,MACtBC,SAASC,iBAAiB,eAAeC,SAAQ,CAACC,EAAMC,KACtDD,EAAKE,aAAa,QAAS,yBAAyB,0BAA4BR,EAAOO,GAAS,cAIpG,IAAI,IAAO,kBAAmB,CAC5BE,MAAO,IACPC,MAAM,EACNC,SAAU,CACRC,MAAO,IACPC,sBAAsB,GAExBC,cAAe,OACfC,WAAY,CACVC,GAAI,qBACJC,KAAM,UACNC,WAAW,KAQf,IAAIC,EASJlB,OAAOmB,iBAAiB,oBAAoB,IAL5BC,WACd,MAAMC,EAAcC,iBAAiBC,IAAI,WAAWC,aAPhC,IAQpBC,EAAaJ,IAGmCK,KAIlD,MAAMC,EAAc,KAClBT,EAAcU,aAAaC,QAAQ,WACnCC,EAAaZ,IAGTa,EAAW7B,SAAS8B,cAAc,sBACxCD,EAASZ,iBAAiB,QAASQ,GAEnC,MAAMG,EAAgBZ,IACpB,MAAMG,EAAcC,iBAAiBC,IAAI,WAAWC,aAvBnC,GAuB4DS,WAAW,KAAMf,GAC9FO,EAAaJ,IAKTI,EAAgBJ,IACNA,EAAYa,GAAG,SAAUC,IACrC,MAAMC,EAAOD,EAASE,MACtB,GAAID,EAAM,CACRE,EAAYF,GAEZ,MAAMlB,EAAcqB,OAAOC,KAAKJ,GAAMG,OAAOC,KAAKJ,GAAMK,OAAS,GACjEb,aAAac,QAAQ,UAAWxB,GAE5BqB,OAAOC,KAAKJ,GAAMK,OAtCT,IAuCXV,EAASY,oBAAoB,QAAShB,GACtCI,EAASa,MAAMC,QAAU,aAG3Bd,EAASY,oBAAoB,QAAShB,GACtCI,EAASa,MAAMC,QAAU,WAOzBP,EAAeF,IACnB,IAAIU,EAAW,GACf,IAAK,MAAMC,KAAOX,EAAM,CACtB,MAAM,IAAEY,EAAG,OAAEC,GAAWb,EAAKW,GAC7BD,GAAY,uDACmCG,qEAE/BD,EAAM,uJAILA,EAAM,8JAMzB9C,SAAS8B,cAAc,wBAAwBkB,WAAaJ,EAE5DK,QAAQC,IACNC,MAAMC,KAAKpD,SAASH,QAAQwD,KAAKC,GAC3BA,EAAIC,SAAiBN,QAAQO,QAA8B,IAAtBF,EAAIG,eACtC,IAAIR,SAASO,IAClBF,EAAIrC,iBAAiB,QAAQ,IAAMuC,GAAQ,KAC3CF,EAAIrC,iBAAiB,SAAS,IAAMuC,GAAQ,WAGhDE,MAAMC,IACFA,EAAQC,OAAOC,GAAQA,MACzBC,IACAC,IACA/D,SAASC,iBAAiB,mBAAmBC,SAASC,IACpDA,EAAK6D,UAAUC,OAAO,kBAQxBF,EAAkB,KACtB,IAAIG,EAAYlE,SAAS8B,cAAc,cACnCoC,GACFA,EAAUD,UAMRH,EAAiB,KACrB,IAAIK,EAAqBnE,SAAS8B,cAAc,wBAChD,GAAIqC,EAAoB,CACtB,IAAIC,EAAmB,IAAI,IAAJ,CAAYD,EAAoB,CACrDE,aAAc,oBAEhBD,EAAiBE,QAAQ,CACvBvB,OAAQ/C,SAAS8B,cAAc,oCAAoCyC,aAAa,iBAElFH,EAAiBpC,GAAG,mBAAmB,KACrC,iBAGF,IAAIwC,EAAmBxE,SAASC,iBAAiB,wBACjDuE,EAAiBtE,SAASC,IACxBA,EAAKc,iBAAiB,SAAUwD,IAC9BA,EAAEC,iBACFF,EAAiBtE,SAASW,IACxBA,EAAGmD,UAAUC,OAAO,oBAEtB9D,EAAK6D,UAAUW,IAAI,iBAEnBP,EAAiBE,QAAQ,CACvBvB,OAAQ5C,EAAKoE,aAAa,iBAE5BH,EAAiBpC,GAAG,mBAAmB,KACrC,uBAKR,IAAU,CACR4C,SAAU,2B","file":"js/portfolio.bundle.js","sourcesContent":["import \"../scss/portfolio.scss\";\n\nimport Swiper from \"swiper/bundle\";\nimport \"swiper/swiper-bundle.min.css\";\n\nimport Isotope from \"isotope-layout\";\n\nimport GLightbox from \"glightbox\";\nimport \"glightbox/dist/css/glightbox.min.css\";\n\nimport AOS from \"aos\";\n\n// Section - Portfolio Full Width Slider / Carousel //\n\nconst images = [\"mob-1\", \"mob-2\", \"mob-3\", \"mob-4\"];\n\nif (window.innerWidth < 1020) {\n  document.querySelectorAll(\".intro-item\").forEach((item, index) => {\n    item.setAttribute(\"style\", `background-image: url(${\"./assets/img/portfolio/\" + images[index] + \".jpg\"})`);\n  });\n}\n\nnew Swiper(\".intro-carousel\", {\n  speed: 600,\n  loop: true,\n  autoplay: {\n    delay: 4000,\n    disableOnInteraction: false,\n  },\n  slidesPerView: \"auto\",\n  pagination: {\n    el: \".swiper-pagination\",\n    type: \"bullets\",\n    clickable: true,\n  },\n});\n\n// Section - Gallery with filters - get images and show them on the page //\n\nconst initialamount = 11; //how many images to fetch initially\nconst loadAmount = 7; //how many images to fetch when clicking 'load more'\nlet lastDataKey;\n\n// Subsection - Get initial images from Firebase //\n\nconst getData = async () => {\n  const databaseRef = projectFirestore.ref(\"images/\").limitToFirst(initialamount);\n  queryForData(databaseRef);\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", () => getData());\n\n// Subsection - Get more images as needed //\n\nconst handleClick = () => {\n  lastDataKey = localStorage.getItem(\"lastKey\");\n  loadMoreData(lastDataKey);\n};\n\nconst loadMore = document.querySelector(\".display-more-imgs\");\nloadMore.addEventListener(\"click\", handleClick);\n\nconst loadMoreData = (lastDataKey) => {\n  const databaseRef = projectFirestore.ref(\"images/\").limitToFirst(loadAmount).startAfter(null, lastDataKey);\n  queryForData(databaseRef);\n};\n\n// Subsection - Fetch data from the database //\n\nconst queryForData = (databaseRef) => {\n  const query = databaseRef.on(\"value\", (snapshot) => {\n    const data = snapshot.val();\n    if (data) {\n      displayData(data);\n\n      const lastDataKey = Object.keys(data)[Object.keys(data).length - 1];\n      localStorage.setItem(\"lastKey\", lastDataKey);\n\n      if (Object.keys(data).length < loadAmount) {\n        loadMore.removeEventListener(\"click\", handleClick);\n        loadMore.style.display = \"none\";\n      }\n    } else {\n      loadMore.removeEventListener(\"click\", handleClick);\n      loadMore.style.display = \"none\";\n    }\n  });\n};\n\n// Subsection - Display data on the page //\n\nconst displayData = (data) => {\n  let template = \"\";\n  for (const key in data) {\n    const { url, filter } = data[key];\n    template += ` \n    <div class=\"col-lg-4 col-md-6 portfolio-item ${filter} hidden\">\n      <div class=\"portfolio-wrap\">\n        <img src=\"${url + \".png\"}\" class=\"img-fluid\" alt=\"\" >\n        <div class=\"portfolio-info\">\n        </div>\n        <div class=\"portfolio-links\">\n          <a href=\"${url + \".png\"}\" data-gallery=\"portfolioGallery\"\n            class=\"portfolio-lightbox\"><i class=\"bi bi-zoom-in\"></i></a>\n        </div>\n      </div>\n    </div>`;\n  }\n  document.querySelector(\".portfolio-container\").innerHTML += template;\n\n  Promise.all(\n    Array.from(document.images).map((img) => {\n      if (img.complete) return Promise.resolve(img.naturalHeight !== 0);\n      return new Promise((resolve) => {\n        img.addEventListener(\"load\", () => resolve(true));\n        img.addEventListener(\"error\", () => resolve(false));\n      });\n    })\n  ).then((results) => {\n    if (results.every((res) => res)) {\n      startPortfolio();\n      removePreloader();\n      document.querySelectorAll(\".portfolio-item\").forEach((item) => {\n        item.classList.remove(\"hidden\");\n      });\n    }\n  });\n};\n\n// Subsection - Remove preloader once everything is loaded on the page //\n\nconst removePreloader = () => {\n  let preloader = document.querySelector(\"#preloader\");\n  if (preloader) {\n    preloader.remove();\n  }\n};\n\n// Subsection - Start portfolio, Isotope and GLightbox //\n\nconst startPortfolio = () => {\n  let portfolioContainer = document.querySelector(\".portfolio-container\");\n  if (portfolioContainer) {\n    let portfolioIsotope = new Isotope(portfolioContainer, {\n      itemSelector: \".portfolio-item\",\n    });\n    portfolioIsotope.arrange({\n      filter: document.querySelector(\"#portfolio-flters .filter-active\").getAttribute(\"data-filter\"),\n    });\n    portfolioIsotope.on(\"arrangeComplete\", () => {\n      AOS.refresh();\n    });\n\n    let portfolioFilters = document.querySelectorAll(\"#portfolio-flters li\");\n    portfolioFilters.forEach((item) => {\n      item.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        portfolioFilters.forEach((el) => {\n          el.classList.remove(\"filter-active\");\n        });\n        item.classList.add(\"filter-active\");\n\n        portfolioIsotope.arrange({\n          filter: item.getAttribute(\"data-filter\"),\n        });\n        portfolioIsotope.on(\"arrangeComplete\", () => {\n          AOS.refresh();\n        });\n      });\n    });\n  }\n  GLightbox({\n    selector: \".portfolio-lightbox\",\n  });\n};\n"],"sourceRoot":""}